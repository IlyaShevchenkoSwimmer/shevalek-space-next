{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/ilyashevchenko/Desktop/my-projects/shevalek-space-next/app/api/photos/refresh/route.ts"],"sourcesContent":["import fs from \"fs\";\nimport { NextResponse } from \"next/server\";\nimport * as ExifReader from \"exifreader\";\n\ninterface Keywords {\n  id: number;\n  value: number[];\n  description: string;\n}\n\ninterface Photo {\n  orientation: string;\n  dateTime: string;\n  category: string;\n  name: string;\n}\n\nexport async function GET() {\n  const photos = fs.readdirSync(process.cwd() + \"/public/photos\");\n  const photosMetadata = photos.map((photo) => {\n    const info = getExif(process.cwd() + \"/public/photos/\" + photo);\n    info.name = photo;\n    return info;\n  });\n  const sortedPhotos = sortPhotosByDate(photosMetadata as Photo[]);\n  fs.writeFileSync(\n    process.cwd() + \"/photosInfo.json\",\n    JSON.stringify(sortedPhotos),\n    {\n      encoding: \"utf-8\",\n    }\n  );\n  return NextResponse.json(sortedPhotos);\n}\n\nfunction getExif(photoPath: string) {\n  const buffer = fs.readFileSync(photoPath);\n  const tags = ExifReader.load(buffer);\n  const info = {\n    orientation:\n      (tags[\"Image Height\"]?.value as number) >\n      (tags[\"Image Width\"]?.value as number)\n        ? \"vertical\"\n        : \"horizontal\",\n    dateTime: tags[\"DateTimeOriginal\"]?.description,\n    category: (tags[\"Keywords\"] as Keywords)?.description,\n    name: \"\",\n  };\n  return info;\n}\n\nfunction sortPhotosByDate(photos: Photo[]) {\n  const result = photos.sort((first, second) => {\n    if (first.dateTime.slice(0, 4) > second.dateTime.slice(0, 4)) {\n      return -1;\n    }\n    if (first.dateTime.slice(0, 4) < second.dateTime.slice(0, 4)) {\n      return 1;\n    }\n    if (first.dateTime.slice(5, 7) > second.dateTime.slice(5, 7)) {\n      return -1;\n    }\n    if (first.dateTime.slice(5, 7) < second.dateTime.slice(5, 7)) {\n      return 1;\n    }\n    if (first.dateTime.slice(8, 10) > second.dateTime.slice(8, 10)) {\n      return -1;\n    }\n    if (first.dateTime.slice(8, 10) < second.dateTime.slice(8, 10)) {\n      return 1;\n    }\n    if (first.dateTime.slice(11, 13) > second.dateTime.slice(11, 13)) {\n      return -1;\n    }\n    if (first.dateTime.slice(11, 13) < second.dateTime.slice(11, 13)) {\n      return 1;\n    }\n    if (first.dateTime.slice(14, 16) > second.dateTime.slice(14, 16)) {\n      return -1;\n    }\n    if (first.dateTime.slice(14, 16) < second.dateTime.slice(14, 16)) {\n      return 1;\n    }\n    if (first.dateTime.slice(17, 19) > second.dateTime.slice(17, 19)) {\n      return -1;\n    }\n    if (first.dateTime.slice(17, 19) < second.dateTime.slice(17, 19)) {\n      return 1;\n    }\n    return 0;\n  });\n  return result;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAeO,eAAe;IACpB,MAAM,SAAS,6FAAA,CAAA,UAAE,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK;IAC9C,MAAM,iBAAiB,OAAO,GAAG,CAAC,CAAC;QACjC,MAAM,OAAO,QAAQ,QAAQ,GAAG,KAAK,oBAAoB;QACzD,KAAK,IAAI,GAAG;QACZ,OAAO;IACT;IACA,MAAM,eAAe,iBAAiB;IACtC,6FAAA,CAAA,UAAE,CAAC,aAAa,CACd,QAAQ,GAAG,KAAK,oBAChB,KAAK,SAAS,CAAC,eACf;QACE,UAAU;IACZ;IAEF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAEA,SAAS,QAAQ,SAAiB;IAChC,MAAM,SAAS,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC;IAC/B,MAAM,OAAO,CAAA,GAAA,qJAAA,CAAA,OAAe,AAAD,EAAE;IAC7B,MAAM,OAAO;QACX,aACE,AAAC,IAAI,CAAC,eAAe,EAAE,QACtB,IAAI,CAAC,cAAc,EAAE,QAClB,aACA;QACN,UAAU,IAAI,CAAC,mBAAmB,EAAE;QACpC,UAAW,IAAI,CAAC,WAAW,EAAe;QAC1C,MAAM;IACR;IACA,OAAO;AACT;AAEA,SAAS,iBAAiB,MAAe;IACvC,MAAM,SAAS,OAAO,IAAI,CAAC,CAAC,OAAO;QACjC,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI;YAC5D,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI;YAC5D,OAAO;QACT;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI;YAC5D,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI;YAC5D,OAAO;QACT;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK;YAC9D,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK;YAC9D,OAAO;QACT;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO;QACT;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO;QACT;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO,CAAC;QACV;QACA,IAAI,MAAM,QAAQ,CAAC,KAAK,CAAC,IAAI,MAAM,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK;YAChE,OAAO;QACT;QACA,OAAO;IACT;IACA,OAAO;AACT","debugId":null}}]
}